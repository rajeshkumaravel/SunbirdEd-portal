import { Manifest } from "@project-sunbird/ext-framework-server/models";
export default class Content {
    private manifest;
    private deviceId;
    private contentsFilesPath;
    private ecarsFolderPath;
    private databaseSdk;
    private telemetryHelper;
    private contentImportManager;
    private systemQueue;
    private fileSDK;
    constructor(manifest: Manifest);
    searchInDB(filters: any, reqId: any, sort?: any): any;
    get(req: any, res: any): any;
    list(req: any, res: any): Promise<any>;
    search(req: any, res: any): any;
    searchDialCode(req: any, res: any): Promise<any>;
    decorateDialSearchContents(sections: any, msgId: any): Promise<{}>;
    private getSectionContents;
    private getChildDataFromApi;
    private getOrderedContents;
    private getMimeTypeCollections;
    private getDialCodeResources;
    getFacets(facets: any, contents: any): Promise<any[]>;
    import(req: any, res: any): Promise<any>;
    pauseImport(req: any, res: any): Promise<void>;
    resumeImport(req: any, res: any): Promise<void>;
    cancelImport(req: any, res: any): Promise<void>;
    retryImport(req: any, res: any): Promise<void>;
    export(req: any, res: any): Promise<any>;
    getDeviceId(): Promise<void>;
    private constructSearchEdata;
    private constructShareEvent;
    convertBufferToJson(proxyResData: any, req: any): any;
    decorateContentWithProperty(contents: any, reqId: any): Promise<any>;
    decorateDialCodeContents(content: any, reqId: any): Promise<any>;
    private isUpdateRequired;
    private checkForUpdates;
    getOfflineContents(contentsIds: string[], reqId: string): Promise<any>;
    getAllOfflineContents(contentsIds: string[], reqId: string): Promise<any>;
    isAvailableOffline(content: any): any;
    private changeContentStatus;
}
