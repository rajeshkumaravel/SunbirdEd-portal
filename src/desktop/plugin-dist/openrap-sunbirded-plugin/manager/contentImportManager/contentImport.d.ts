import { ISystemQueue, ITaskExecuter } from "OpenRAP/dist/api";
import { Observer } from "rxjs";
export declare class ImportContent implements ITaskExecuter {
    private deviceId;
    static taskType: string;
    private workerProcessRef;
    private fileSDK;
    private dbSDK;
    private telemetryHelper;
    private manifestJson;
    private interrupt;
    private contentImportData;
    private observer;
    private contentLocation;
    private contentFolderPath;
    constructor();
    getDeviceId(): Promise<void>;
    status(): ISystemQueue;
    start(contentImportData: ISystemQueue, observer: Observer<ISystemQueue>): Promise<boolean>;
    cleanUpAfterErrorOrCancel(): void;
    cancel(): Promise<boolean>;
    pause(): Promise<boolean>;
    private saveDataFromWorker;
    private extractEcar;
    private processContents;
    private constructShareEvent;
    private saveContentsToDb;
    private copyEcar;
    private handleChildProcessMessage;
    private handleWorkerCloseEvents;
    private handleUnexpectedChildProcessExit;
    private handleChildProcessError;
    private getContentsFromDB;
    private handleKillSignal;
    private createHierarchy;
}
